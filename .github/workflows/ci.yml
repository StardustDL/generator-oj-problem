name: CI

on:
  push:
  pull_request:
  release:
    types: [released]

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-python@v4
        with:
          python-version: "3.7"
          architecture: "x64"
      - name: Build
        run: |
          cd src
          cp ../README.md ./README.md
          python -m build -o ../dist
      - name: Upload package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: ./dist
  test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python: ["3.7", "3.8", "3.9", "3.10"]
        experimental: [false]
        include:
          - os: ubuntu-latest
            python: "3.11"
            experimental: true
    continue-on-error: ${{ matrix.experimental }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          persist-credentials: false
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          architecture: "x64"
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: package
          path: ./dist
      - name: Install
        run: python -m pip install ./dist/*.whl
      - name: Help
        run: gop --help
      - name: Demo
        run: |
          cd demo
          gop check
          gop pack
      - name: Upload package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: demo-dist
          path: ./demo/dist
  deploy:
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' || github.event_name == 'release' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download package artifacts
        uses: actions/download-artifact@v3
        with:
          name: package
          path: ./dist
      - name: Deploy packages
        if: ${{ github.event_name == 'release' }}
        env:
          PYTHONUTF8: 1
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m pip install --upgrade build twine
          python -m twine upload --skip-existing --repository pypi "dist/*"
